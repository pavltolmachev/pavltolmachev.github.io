{"version":3,"sources":["SeasonDisplay.js","Loader.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","_seasonConfig$season","react_default","a","createElement","className","concat","Loader","defaultProps","App","state","errorMessage","_this2","this","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","error","message","style","color","src_Loader","src_SeasonDisplay_0","border","renderContent","React","Component","ReactDOM","render","src_App","document","querySelector"],"mappings":"4LAGMA,SAAe,CACjBC,OAAQ,CACJC,KAAM,sBACNC,SAAU,OAEdC,OAAQ,CACJF,KAAM,oBACNC,SAAU,eA4BHE,EAhBO,SAACC,GAEnB,IAVeC,EAAKC,EAUhBC,GAVWF,EAUQD,EAAMC,KAVTC,GAUe,IAAIE,MAAQC,aATlC,GAAKH,GAAS,EAChBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAIHK,EAGJZ,EAAaS,GAAhCP,EAHuBU,EAGvBV,KAAMC,EAHiBS,EAGjBT,SAEZ,OAGIU,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAC,OAAoBR,IAC9BI,EAAAC,EAAAC,cAAA,KAAGC,UAAS,0BAAAC,OAA4Bd,KACxCU,EAAAC,EAAAC,cAAA,UAAKb,GACLW,EAAAC,EAAAC,cAAA,KAAGC,UAAS,2BAAAC,OAA6Bd,OC/B/Ce,EAAS,SAACZ,GAEZ,OACIO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACVV,EAAMJ,QAMvBgB,EAAOC,aAAe,CAClBjB,KAAM,cAGKgB,QCXTE,6MAEFC,MAAQ,CAAEd,IAAK,KAAMe,aAAc,uFAEf,IAAAC,EAAAC,KAChBC,OAAOC,UAAUC,YAAYC,mBACzB,SAAAC,GAAQ,OAAIN,EAAKO,SAAS,CAACvB,IAAKsB,EAASE,OAAOC,YAChD,SAAAC,GAAK,OAAIV,EAAKO,SAAS,CAAER,aAAcW,EAAMC,oDAKjD,OAAIV,KAAKH,MAAMY,MACJpB,EAAAC,EAAAC,cAAA,OAAKoB,MAAO,CAACC,MAAO,QAASZ,KAAKH,MAAMY,OAG5B,OAAnBT,KAAKH,MAAMd,IACJM,EAAAC,EAAAC,cAACsB,EAAD,CAAQnC,KAAK,mCAEbW,EAAAC,EAAAC,cAACuB,EAAD,CAAe/B,IAAKiB,KAAKH,MAAMd,uCAK1C,OACIM,EAAAC,EAAAC,cAAA,OAAKoB,MAAO,CAAEI,OAAQ,kBAChBf,KAAKgB,wBA1BLC,IAAMC,WAiCxBC,IAASC,OAAO/B,EAAAC,EAAAC,cAAC8B,EAAD,MAASC,SAASC,cAAc","file":"static/js/main.aebb4cec.chunk.js","sourcesContent":["import './SeasonDisplay.css';\nimport React from 'react'\n\nconst seasonConfig = {\n    summer: {\n        text: 'Let\\'s hit the beach',\n        iconName: 'sun'\n    },\n    winter: {\n        text: 'Burr, it\\'s chilly',\n        iconName: 'snowflake'\n    }\n};\n\nconst getSeason = (lat, month) => {\n    if (month >= 3 && month <= 8) {\n        return lat > 0 ? 'summer' : 'winter';\n    } else {\n        return lat > 0 ? 'winter' : 'summer';\n    }\n};\n\nconst SeasonDisplay = (props) => {\n\n    let season = getSeason(props.lat, (new Date()).getMonth());\n    let { text, iconName } = seasonConfig[season];\n\n    return (\n        // Good practice to name the class the same as\n        // the component season-display = SeasonDisplay\n        <div className={`season-display ${season}`}>\n            <i className={`icon-left massive icon ${iconName}`} />\n            <h1>{text}</h1>\n            <i className={`icon-right massive icon ${iconName}`} />\n        </div>\n    );\n};\n\nexport default SeasonDisplay","import React from 'react'\n\nconst Loader = (props) => {\n\n    return (\n        <div className=\"ui active dimmer\">\n            <div className=\"ui big text loader\">\n                {props.text}\n            </div>\n        </div>\n    );\n};\n\nLoader.defaultProps = {\n    text: 'Loading...'\n}\n\nexport default Loader","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport SeasonDisplay from './SeasonDisplay'\nimport Loader from './Loader'\n\nclass App extends React.Component {\n\n    state = { lat: null, errorMessage: '' };\n\n    componentDidMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            position => this.setState({lat: position.coords.latitude }),\n            error => this.setState({ errorMessage: error.message })\n        );\n    };\n\n    renderContent() {\n        if (this.state.error) {\n            return <div style={{color: 'red'}}>{this.state.error}</div>;\n        }\n\n        if (this.state.lat === null) {\n            return <Loader text=\"Please accept location request\" />;\n        } else {\n            return <SeasonDisplay lat={this.state.lat} />;\n        }\n    };\n\n    render() {\n        return (\n            <div style={{ border: '3px solid red' }}>\n                { this.renderContent() }\n            </div>\n        );\n    }\n\n}\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}